"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const cv = __importStar(require("opencv4nodejs-prebuilt"));
const sneer_1 = require("sneer");
const find_edges_function_1 = require("./find-edges.function");
describe("findEdges", () => {
    it("should convert an image to grayscale and run Canny edge detection", async () => {
        // GIVEN
        const grayImageMock = sneer_1.mockPartial({
            cannyAsync: jest.fn()
        });
        const inputImageMock = sneer_1.mockPartial({
            cvtColorAsync: jest.fn(() => Promise.resolve(grayImageMock))
        });
        // WHEN
        await find_edges_function_1.findEdges(inputImageMock);
        // THEN
        expect(inputImageMock.cvtColorAsync).toBeCalledWith(cv.COLOR_BGR2GRAY);
        expect(grayImageMock.cannyAsync).toBeCalledWith(50, 200);
    });
});
//# sourceMappingURL=find-edges.function.spec.js.map