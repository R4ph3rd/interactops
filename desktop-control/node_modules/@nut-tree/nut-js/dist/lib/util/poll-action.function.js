"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function timeout(updateIntervalMs, maxDurationMs, action) {
    return new Promise((resolve, reject) => {
        let interval;
        const maxTimeout = setTimeout(() => {
            clearTimeout(maxTimeout);
            if (interval) {
                clearTimeout(interval);
            }
            reject(`Action timed out after ${maxDurationMs} ms`);
        }, maxDurationMs);
        const startInterval = () => {
            interval = setTimeout(function intervalFunc() {
                action().then((result) => {
                    if (!result) {
                        interval = setTimeout(intervalFunc, updateIntervalMs);
                    }
                    else {
                        clearTimeout(maxTimeout);
                        clearTimeout(interval);
                        resolve(result);
                    }
                }).catch(() => {
                    interval = setTimeout(intervalFunc, updateIntervalMs);
                });
            }, updateIntervalMs);
        };
        action().then((result) => {
            if (!result) {
                startInterval();
            }
            else {
                clearTimeout(maxTimeout);
                resolve(result);
            }
        }).catch(() => {
            startInterval();
        });
    });
}
exports.timeout = timeout;
//# sourceMappingURL=poll-action.function.js.map